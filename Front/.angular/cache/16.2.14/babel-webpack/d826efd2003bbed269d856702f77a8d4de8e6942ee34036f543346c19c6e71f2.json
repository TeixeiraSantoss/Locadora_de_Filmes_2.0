{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CadastrarGeneroComponent {\n  constructor(client) {\n    this.client = client;\n    this.generos = [];\n    this.ultimoId = 0;\n    this.nome = \"\";\n  }\n  ngOnInit() {\n    this.client.get(\"https://localhost:7187/api/genero/listar\").subscribe({\n      next: generos => {\n        this.generos = generos;\n        if (generos.length > 0) {\n          const ultimoGenero = generos[generos.length - 1];\n          if (ultimoGenero.id !== undefined) {\n            this.ultimoId = ultimoGenero.id += 1;\n            console.log(\"Ultimo id: \", this.ultimoId);\n          }\n        }\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  cadastrar() {\n    let genero = {\n      id: this.ultimoId,\n      nome: this.nome\n    };\n    this.client.post(\"https://localhost:7187/api/genero/cadastrar\", genero).subscribe({\n      next: filme => {\n        console.log(\"Filme cadastrado com sucesso\");\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CadastrarGeneroComponent_Factory(t) {\n    return new (t || CadastrarGeneroComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarGeneroComponent,\n    selectors: [[\"app-cadastrar-genero\"]],\n    decls: 2,\n    vars: 0,\n    template: function CadastrarGeneroComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"cadastrar-genero works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CadastrarGeneroComponent","constructor","client","generos","ultimoId","nome","ngOnInit","get","subscribe","next","length","ultimoGenero","id","undefined","console","log","error","erro","cadastrar","genero","post","filme","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","template","CadastrarGeneroComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Genero\\cadastrar-genero\\cadastrar-genero.component.ts","D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Genero\\cadastrar-genero\\cadastrar-genero.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { GeneroModel } from 'src/app/models/genero.model';\n\n@Component({\n  selector: 'app-cadastrar-genero',\n  templateUrl: './cadastrar-genero.component.html',\n  styleUrls: ['./cadastrar-genero.component.css']\n})\nexport class CadastrarGeneroComponent {\n  \n  constructor(private client : HttpClient){}\n\n  generos : GeneroModel[] = []\n  ultimoId: number = 0\n  nome: string = \"\"\n\n  ngOnInit(): void{\n    this.client.get<GeneroModel[]>\n    (\"https://localhost:7187/api/genero/listar\").subscribe\n    ({\n      next: (generos) => {\n        this.generos = generos\n\n        if(generos.length > 0)\n          {\n            const ultimoGenero: GeneroModel = generos[generos.length - 1]\n\n            if(ultimoGenero.id !== undefined)\n              {\n                this.ultimoId = (ultimoGenero.id += 1)\n                console.log(\"Ultimo id: \", this.ultimoId)\n              }\n          }\n      },\n      error: (erro) => {\n        console.log(erro)\n      }\n    })\n  }\n\n  cadastrar() : void\n  {\n    let genero : GeneroModel = {\n      id: this.ultimoId,\n      nome: this.nome\n    }\n\n    this.client.post<GeneroModel>\n    (\"https://localhost:7187/api/genero/cadastrar\", genero).subscribe\n    ({\n      next: (filme) =>{\n        console.log(\"Filme cadastrado com sucesso\");\n      },\n      error: (erro) => {\n        console.log(erro);\n      }\n    })\n  }\n}\n","<p>cadastrar-genero works!</p>\n"],"mappings":";;AASA,OAAM,MAAOA,wBAAwB;EAEnCC,YAAoBC,MAAmB;IAAnB,KAAAA,MAAM,GAANA,MAAM;IAE1B,KAAAC,OAAO,GAAmB,EAAE;IAC5B,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,IAAI,GAAW,EAAE;EAJwB;EAMzCC,QAAQA,CAAA;IACN,IAAI,CAACJ,MAAM,CAACK,GAAG,CACd,0CAA0C,CAAC,CAACC,SAAS,CACrD;MACCC,IAAI,EAAGN,OAAO,IAAI;QAChB,IAAI,CAACA,OAAO,GAAGA,OAAO;QAEtB,IAAGA,OAAO,CAACO,MAAM,GAAG,CAAC,EACnB;UACE,MAAMC,YAAY,GAAgBR,OAAO,CAACA,OAAO,CAACO,MAAM,GAAG,CAAC,CAAC;UAE7D,IAAGC,YAAY,CAACC,EAAE,KAAKC,SAAS,EAC9B;YACE,IAAI,CAACT,QAAQ,GAAIO,YAAY,CAACC,EAAE,IAAI,CAAE;YACtCE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACX,QAAQ,CAAC;;;MAGnD,CAAC;MACDY,KAAK,EAAGC,IAAI,IAAI;QACdH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACnB;KACD,CAAC;EACJ;EAEAC,SAASA,CAAA;IAEP,IAAIC,MAAM,GAAiB;MACzBP,EAAE,EAAE,IAAI,CAACR,QAAQ;MACjBC,IAAI,EAAE,IAAI,CAACA;KACZ;IAED,IAAI,CAACH,MAAM,CAACkB,IAAI,CACf,6CAA6C,EAAED,MAAM,CAAC,CAACX,SAAS,CAChE;MACCC,IAAI,EAAGY,KAAK,IAAI;QACdP,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC7C,CAAC;MACDC,KAAK,EAAGC,IAAI,IAAI;QACdH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACnB;KACD,CAAC;EACJ;EAAC,QAAAK,CAAA,G;qBAjDUtB,wBAAwB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAxB3B,wBAAwB;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTrCV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,8BAAuB;QAAAb,EAAA,CAAAc,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}