{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class CadastrarComponent {\n  constructor(client) {\n    this.client = client;\n    //Criando as variaveis que vão conter os dados do formulario\n    this.filmes = [];\n    this.generos = [];\n    this.ultimoId = 0;\n    this.nome = \"\";\n    this.classif_ind = \"\";\n    this.ano_lanc = \"\";\n    this.alugado = false;\n    this.GeneroId = 7;\n  }\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit() {\n    this.client.get(\"https://localhost:7187/api/genero/listar\").subscribe({\n      //caso a requisição funcione, vai execultar esse código\n      //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n      next: generos => {\n        console.table(generos);\n        this.generos = generos;\n      },\n      //caso a requisição falhe\n      error: erro => {\n        console.log(erro);\n      }\n    });\n    this.client.get(\"https://localhost:7187/api/filme/listar\").subscribe({\n      next: filmes => {\n        this.filmes = filmes;\n        if (filmes.length > 0) {\n          //obtendo o ultimo usuario da lista\n          const ultimoFilme = filmes[filmes.length - 1];\n          if (ultimoFilme.id !== undefined) {\n            this.ultimoId = ultimoFilme.id += 1;\n            console.log(\"Ultimo id: \", this.ultimoId);\n          } else {\n            console.log(\"O ultimo usuario da lista não possui id\");\n          }\n        } else {\n          console.log(\"Lista de filmes vazia\");\n        }\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  //Função \"Cadastrar\"\n  cadastrar() {\n    //Objeto carregado com os dados do formulario\n    //Vai ser enviado para a API\n    let filme = {\n      id: this.ultimoId,\n      nome: this.nome,\n      classif_ind: Number.parseInt(this.classif_ind),\n      ano_lanc: Number.parseInt(this.ano_lanc),\n      alugado: this.alugado,\n      GeneroId: this.GeneroId\n    };\n    //Faz uma requisção para a API, e envia o objeto \"filme\"\n    this.client.post(\"http://localhost:7187/api/filme/cadastrar\", filme).subscribe({\n      next: () => {\n        console.log(\"Filme cadastrado com sucesso\");\n      },\n      error: erro => {\n        console.log(this.GeneroId);\n        console.log(erro, \"Nao foi possivel cadastrar\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CadastrarComponent_Factory(t) {\n    return new (t || CadastrarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarComponent,\n    selectors: [[\"app-cadastrar\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"m-3\"], [1, \"form-label\"], [\"type\", \"text\", \"name\", \"nome\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"classif_ind\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"ano_lanc\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"m-3\", 3, \"click\"]],\n    template: function CadastrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.nome = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 0)(6, \"label\", 1);\n        i0.ɵɵtext(7, \"Classifica\\u00E7\\u00E3o Indicativa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.classif_ind = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 0)(10, \"label\", 1);\n        i0.ɵɵtext(11, \"Ano de Lan\\u00E7amento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.ano_lanc = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CadastrarComponent_Template_button_click_13_listener() {\n          return ctx.cadastrar();\n        });\n        i0.ɵɵtext(14, \"Salvar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.nome);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.classif_ind);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ano_lanc);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CadastrarComponent","constructor","client","filmes","generos","ultimoId","nome","classif_ind","ano_lanc","alugado","GeneroId","ngOnInit","get","subscribe","next","console","table","error","erro","log","length","ultimoFilme","id","undefined","cadastrar","filme","Number","parseInt","post","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","CadastrarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarComponent_Template_input_ngModelChange_4_listener","$event","CadastrarComponent_Template_input_ngModelChange_8_listener","CadastrarComponent_Template_input_ngModelChange_12_listener","CadastrarComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Filme\\cadastrar\\cadastrar.component.ts","D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Filme\\cadastrar\\cadastrar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FilmeModel } from 'src/app/models/filme.model';\nimport { GeneroModel } from 'src/app/models/genero.model';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css']\n})\nexport class CadastrarComponent {\n  constructor(private client: HttpClient) {}\n  \n  //Criando as variaveis que vão conter os dados do formulario\n  filmes: FilmeModel[] = [];\n  generos: GeneroModel[] = [];\n\n  ultimoId: number = 0;\n  nome: string = \"\";\n  classif_ind: string = \"\";\n  ano_lanc: string = \"\";\n  alugado: boolean = false;\n  GeneroId: number = 7;  \n\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit(): void{\n    this.client.get<GeneroModel[]>\n      (\"https://localhost:7187/api/genero/listar\")\n      .subscribe({\n        //caso a requisição funcione, vai execultar esse código\n        \n        //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n        next: (generos) => {\n          console.table(generos);\n          this.generos = generos;\n        },\n\n        //caso a requisição falhe\n        error : (erro) => {\n          console.log(erro)\n        }\n      })\n\n      this.client.get<FilmeModel[]>\n        (\"https://localhost:7187/api/filme/listar\")\n        .subscribe({\n          next: (filmes) =>{\n            this.filmes = filmes          \n\n          if(filmes.length > 0){\n            //obtendo o ultimo usuario da lista\n            const ultimoFilme: FilmeModel = filmes[filmes.length - 1]\n\n            if(ultimoFilme.id !== undefined){\n              this.ultimoId = (ultimoFilme.id += 1)\n              console.log(\"Ultimo id: \", this.ultimoId)\n            } else{\n              console.log(\"O ultimo usuario da lista não possui id\")\n            }\n          } else{\n            console.log(\"Lista de filmes vazia\")\n          }\n          },\n          error: (erro) =>{\n            console.log(erro)\n          }\n        });\n  }\n\n  //Função \"Cadastrar\"\n  cadastrar(): void\n  {\n    //Objeto carregado com os dados do formulario\n    //Vai ser enviado para a API\n    let filme: FilmeModel = {\n      id: this.ultimoId,\n      nome: this.nome,\n      classif_ind: Number.parseInt(this.classif_ind),\n      ano_lanc: Number.parseInt(this.ano_lanc),\n      alugado: this.alugado,\n      GeneroId: this.GeneroId\n    }\n\n    //Faz uma requisção para a API, e envia o objeto \"filme\"\n    this.client.post<FilmeModel>\n    (\"http://localhost:7187/api/filme/cadastrar\", filme).subscribe\n    ({\n      next: () => {\n        console.log(\"Filme cadastrado com sucesso\");\n      },\n      error: (erro) => {\n        console.log(this.GeneroId)\n        console.log(erro, \"Nao foi possivel cadastrar\");\n      }\n    })\n  }\n}\n","<form>\r\n    <div class=\"m-3\">\r\n      <label class=\"form-label\">Nome</label>\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"nome\" name=\"nome\">\r\n    </div>\r\n    <div class=\"m-3\">\r\n      <label class=\"form-label\">Classificação Indicativa</label>\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"classif_ind\" name=\"classif_ind\">\r\n    </div>\r\n    <div class=\"m-3\">\r\n      <label class=\"form-label\">Ano de Lançamento</label>\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"ano_lanc\" name=\"ano_lanc\">\r\n    </div>\r\n    <!-- <div class=\"m-3\">\r\n        <label class=\"form-label\">Genero</label>\r\n        <select [(ngModel)]=\"GeneroId\" name=\"GeneroId\">\r\n            <option *ngFor=\"let g of generos\" [value]=\"g.id\">{{g.nome}}</option>\r\n        </select>\r\n    </div> -->\r\n    <button type=\"submit\" class=\"btn btn-primary m-3\" (click)=\"cadastrar()\">Salvar</button>\r\n  </form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}