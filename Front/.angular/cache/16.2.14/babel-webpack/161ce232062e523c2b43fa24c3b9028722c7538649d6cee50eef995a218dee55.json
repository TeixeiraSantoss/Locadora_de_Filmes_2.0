{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ListarGeneroComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ListarGeneroComponent_tr_15_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const g_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.excluir(g_r1.id));\n    });\n    i0.ɵɵtext(4, \"excluir\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const g_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(g_r1.nome);\n  }\n}\nexport class ListarGeneroComponent {\n  constructor(client) {\n    this.client = client;\n    this.generos = [];\n    //Variaveis utilizadas para fazer a pesquisa\n    //1º - um array que vai ser utilizado para fazer a pesquisa\n    this.generosFiltrados = [];\n    //2º - uma variavel que vai receber oque esta sendo digitado pelo usuario\n    this._termoPesquisa = \"\";\n  }\n  //3º - Getter e Setter para o termo de pesquisa\n  get termoPesquisa() {\n    return this._termoPesquisa;\n  }\n  set termoPesquisa(value) {\n    this._termoPesquisa = value;\n    //IF de uma linha\n    //Caso \"termoPesquisa\" seja \"true\", o metodo \"filtrarGenero\" será chamado, caso \"false\" retorna a lista \"generos\"\n    this.generosFiltrados = this.termoPesquisa ? this.filtrarGenero(this.termoPesquisa) : this.generos;\n  }\n  //4º - um metodo que itere a lista \"generos\" usando o \"_termoPesquisa\" como referencia\n  filtrarGenero(termoPesquisa) {\n    //convertendo o \"termoPesquisa\" para minusculo\n    termoPesquisa = termoPesquisa.toLocaleLowerCase();\n    return this.generos.filter(genero => genero.nome.toLocaleLowerCase().indexOf(termoPesquisa) !== -1);\n  }\n  ngOnInit() {\n    this.client.get(\"https://localhost:7187/api/genero/listar\").subscribe({\n      next: generos => {\n        this.generos = generos;\n        this.generosFiltrados = generos;\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  excluir(id) {\n    this.client.delete(`https://localhost:7187/api/genero/excluir/${id}`).subscribe({\n      next: () => {\n        this.generos = this.generos.filter(genero => genero.id !== id);\n        this.generosFiltrados = this.generosFiltrados.filter(genero => genero.id !== id);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ListarGeneroComponent_Factory(t) {\n    return new (t || ListarGeneroComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListarGeneroComponent,\n    selectors: [[\"app-listar-genero\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[1, \"container-fluid\"], [\"type\", \"text\", \"placeholder\", \"Nome do Genero\", 3, \"ngModel\", \"ngModelChange\"], [1, \"table\", \"table-hover\"], [\"scope\", \"col\"], [1, \"table-group-divider\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function ListarGeneroComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Lista de Generos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\")(4, \"label\");\n        i0.ɵɵtext(5, \"Buscar:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function ListarGeneroComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.termoPesquisa = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"table\", 2)(8, \"thead\")(9, \"tr\")(10, \"th\", 3);\n        i0.ɵɵtext(11, \"Genero\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\", 3);\n        i0.ɵɵtext(13, \"Excluir\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"tbody\", 4);\n        i0.ɵɵtemplate(15, ListarGeneroComponent_tr_15_Template, 5, 1, \"tr\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.termoPesquisa);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.generosFiltrados);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ListarGeneroComponent_tr_15_Template_button_click_3_listener","restoredCtx","ɵɵrestoreView","_r3","g_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","excluir","id","ɵɵadvance","ɵɵtextInterpolate","nome","ListarGeneroComponent","constructor","client","generos","generosFiltrados","_termoPesquisa","termoPesquisa","value","filtrarGenero","toLocaleLowerCase","filter","genero","indexOf","ngOnInit","get","subscribe","next","error","erro","console","log","delete","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","ListarGeneroComponent_Template","rf","ctx","ListarGeneroComponent_Template_input_ngModelChange_6_listener","$event","ɵɵtemplate","ListarGeneroComponent_tr_15_Template","ɵɵproperty"],"sources":["D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Genero\\listar-genero\\listar-genero.component.ts","D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Genero\\listar-genero\\listar-genero.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { GeneroModel } from 'src/app/models/genero.model';\n\n@Component({\n  selector: 'app-listar-genero',\n  templateUrl: './listar-genero.component.html',\n  styleUrls: ['./listar-genero.component.css']\n})\nexport class ListarGeneroComponent {\n  constructor(private client: HttpClient){}\n\n  generos: GeneroModel[] = []\n\n  //Variaveis utilizadas para fazer a pesquisa\n\n    //1º - um array que vai ser utilizado para fazer a pesquisa\n    generosFiltrados: GeneroModel[] = []\n\n    //2º - uma variavel que vai receber oque esta sendo digitado pelo usuario\n    private _termoPesquisa: string = \"\"\n\n    //3º - Getter e Setter para o termo de pesquisa\n    public get termoPesquisa(): string\n    {\n      return this._termoPesquisa\n    }\n\n    public set termoPesquisa(value: string)\n    {\n      this._termoPesquisa = value;\n\n      //IF de uma linha\n      //Caso \"termoPesquisa\" seja \"true\", o metodo \"filtrarGenero\" será chamado, caso \"false\" retorna a lista \"generos\"\n      this.generosFiltrados = this.termoPesquisa ? this.filtrarGenero(this.termoPesquisa) : this.generos\n    }\n\n    //4º - um metodo que itere a lista \"generos\" usando o \"_termoPesquisa\" como referencia\n\n    filtrarGenero(termoPesquisa: string): GeneroModel[]\n    {\n      //convertendo o \"termoPesquisa\" para minusculo\n      termoPesquisa = termoPesquisa.toLocaleLowerCase()\n\n      return this.generos.filter(genero => genero.nome.toLocaleLowerCase().indexOf(termoPesquisa) !== -1);\n    }\n\n  ngOnInit(): void\n  {\n    this.client.get<GeneroModel[]>\n    (\"https://localhost:7187/api/genero/listar\").subscribe\n    ({\n      next: (generos) =>\n        {\n          this.generos = generos\n          this.generosFiltrados = generos\n        },\n        error: (erro) => \n        {\n          console.log(erro)\n        }\n    })\n  }\n\n  excluir(id: number): void\n  {\n    this.client.delete<GeneroModel[]>\n    (`https://localhost:7187/api/genero/excluir/${id}`).subscribe\n    ({\n      next: () => \n      {\n        this.generos = this.generos.filter(genero => genero.id !== id)\n        this.generosFiltrados = this.generosFiltrados.filter(genero => genero.id !== id)\n      },\n      error: (erro) =>\n      {\n        console.log(erro)\n      }\n    })\n  }\n}\n","<h1>Lista de Generos</h1>\n\n<div class=\"container-fluid\">\n \n    <div>\n      <label>Buscar:</label>\n      <input type=\"text\" [(ngModel)]=\"termoPesquisa\" placeholder=\"Nome do Genero\">\n    </div>\n\n    <table class=\"table table-hover \">\n        <thead>\n          <tr>\n            <th scope=\"col\">Genero</th>\n            <th scope=\"col\">Excluir</th>\n          </tr>\n        </thead>\n\n        <!-- *ngIf=\"filmes && filmes.length\" -->\n          <tbody class=\"table-group-divider\" >\n          <tr *ngFor=\"let g of generosFiltrados\">\n            <td>{{g.nome}}</td>\n            <button (click)=\"excluir(g.id)\">excluir</button>\n          </tr>\n        </tbody>\n      </table>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}