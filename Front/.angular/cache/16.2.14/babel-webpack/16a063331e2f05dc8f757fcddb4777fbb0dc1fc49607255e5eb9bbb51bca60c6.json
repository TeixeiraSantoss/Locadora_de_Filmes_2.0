{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class CadastrarComponent {\n  constructor(client) {\n    this.client = client;\n    //Criando as variaveis que vão conter os dados do formulario\n    this.filmes = [];\n    this.generos = [];\n    this.nome = \"\";\n    this.classif_ind = \"\";\n    this.ano_lanc = \"\";\n    this.alugado = false;\n    this.GeneroId = \"\";\n  }\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit() {\n    this.client.get(\"https://localhost:7186/api/genero/listar\").subscribe({\n      //caso a requisição funcione, vai execultar esse código\n      //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n      next: generos => {\n        console.table(generos);\n        this.generos = generos;\n      },\n      //caso a requisição falhe\n      error: erro => {\n        console.log(erro);\n      }\n    });\n    this.client.get(\"https://localhost:7187/api/filme/listar\").subscribe({\n      next: filmes => {\n        this.filmes = filmes;\n        if (filmes.length > 0) {\n          //obtendo o ultimo usuario da lista\n          const ultimoFilme = filmes[filmes.length - 1];\n          if (ultimoFilme.filmeID !== undefined) {\n            this.ultimoId = (ultimoFilme.filmeID += 1).toString();\n            console.log(\"Ultimo filmeId: \", this.ultimoId);\n          } else {\n            console.log(\"O ultimo usuario da lista não possui filmeId\");\n          }\n        } else {\n          console.log(\"Lista de filmes vazia\");\n        }\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  //Função \"Cadastrar\"\n  cadastrar() {\n    //Objeto carregado com os dados do formulario\n    //Vai ser enviado para a API\n    let filme = {\n      id: 10,\n      nome: this.nome,\n      classif_ind: Number.parseInt(this.classif_ind),\n      ano_lanc: Number.parseInt(this.ano_lanc),\n      alugado: this.alugado,\n      GeneroId: Number.parseInt(this.GeneroId),\n      Genero: this.genero\n    };\n    //Faz uma requisção para a API, e envia o objeto \"filme\"\n    this.client.post(\"http://localhost:5267/api/filme/cadastrar\", filme).subscribe({\n      next: filme => {\n        console.log(\"Filme cadastrado com sucesso\");\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CadastrarComponent_Factory(t) {\n    return new (t || CadastrarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarComponent,\n    selectors: [[\"app-cadastrar\"]],\n    decls: 19,\n    vars: 4,\n    consts: [[1, \"m-3\"], [1, \"form-label\"], [\"type\", \"text\", \"name\", \"nome\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"classif_ind\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"ano_lanc\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"GeneroId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"m-3\", 3, \"click\"]],\n    template: function CadastrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.nome = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 0)(6, \"label\", 1);\n        i0.ɵɵtext(7, \"Classifica\\u00E7\\u00E3o Indicativa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.classif_ind = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 0)(10, \"label\", 1);\n        i0.ɵɵtext(11, \"Ano de Lan\\u00E7amento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.ano_lanc = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 0)(14, \"label\", 1);\n        i0.ɵɵtext(15, \"Genero\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.GeneroId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function CadastrarComponent_Template_button_click_17_listener() {\n          return ctx.cadastrar();\n        });\n        i0.ɵɵtext(18, \"Salvar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.nome);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.classif_ind);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ano_lanc);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.GeneroId);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CadastrarComponent","constructor","client","filmes","generos","nome","classif_ind","ano_lanc","alugado","GeneroId","ngOnInit","get","subscribe","next","console","table","error","erro","log","length","ultimoFilme","filmeID","undefined","ultimoId","toString","cadastrar","filme","id","Number","parseInt","Genero","genero","post","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","CadastrarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarComponent_Template_input_ngModelChange_4_listener","$event","CadastrarComponent_Template_input_ngModelChange_8_listener","CadastrarComponent_Template_input_ngModelChange_12_listener","CadastrarComponent_Template_input_ngModelChange_16_listener","CadastrarComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Filme\\cadastrar\\cadastrar.component.ts","D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Filme\\cadastrar\\cadastrar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FilmeModel } from 'src/app/models/filme.model';\nimport { GeneroModel } from 'src/app/models/genero.model';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css']\n})\nexport class CadastrarComponent {\n  constructor(private client: HttpClient) {}\n  \n  //Criando as variaveis que vão conter os dados do formulario\n  filmes: FilmeModel[] = [];\n  generos: GeneroModel[] = [];\n  nome: string = \"\";\n  classif_ind: string = \"\";\n  ano_lanc: string = \"\";\n  alugado: boolean = false;\n  GeneroId: string = \"\";  \n\n//Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\nngOnInit(): void{\n  this.client.get<GeneroModel[]>\n    (\"https://localhost:7186/api/genero/listar\")\n    .subscribe({\n      //caso a requisição funcione, vai execultar esse código\n      \n      //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n      next: (generos) => {\n        console.table(generos);\n        this.generos = generos;\n      },\n\n      //caso a requisição falhe\n      error : (erro) => {\n        console.log(erro)\n      }\n    })\n\n    this.client.get<FilmeModel[]>\n      (\"https://localhost:7187/api/filme/listar\")\n      .subscribe({\n        next: (filmes) =>{\n          this.filmes = filmes          \n\n        if(filmes.length > 0){\n          //obtendo o ultimo usuario da lista\n          const ultimoFilme: Filme = filmes[filmes.length - 1]\n\n          if(ultimoFilme.filmeID !== undefined){\n            this.ultimoId = (ultimoFilme.filmeID += 1).toString()\n            console.log(\"Ultimo filmeId: \", this.ultimoId)\n          } else{\n            console.log(\"O ultimo usuario da lista não possui filmeId\")\n          }\n        } else{\n          console.log(\"Lista de filmes vazia\")\n        }\n        },\n        error: (erro) =>{\n          console.log(erro)\n        }\n      });\n}\n\n  //Função \"Cadastrar\"\n  cadastrar(): void\n  {\n    //Objeto carregado com os dados do formulario\n    //Vai ser enviado para a API\n    let filme: FilmeModel = {\n      id: 10,\n      nome: this.nome,\n      classif_ind: Number.parseInt(this.classif_ind),\n      ano_lanc: Number.parseInt(this.ano_lanc),\n      alugado: this.alugado,\n      GeneroId: Number.parseInt(this.GeneroId),\n      Genero: this.genero\n    }\n\n    //Faz uma requisção para a API, e envia o objeto \"filme\"\n    this.client.post<FilmeModel>\n    (\"http://localhost:5267/api/filme/cadastrar\", filme).subscribe\n    ({\n      next: (filme) => {\n        console.log(\"Filme cadastrado com sucesso\");\n      },\n      error: (erro) => {\n        console.log(erro);\n      }\n    })\n  }\n}\n","<form>\r\n    <div class=\"m-3\">\r\n      <label class=\"form-label\">Nome</label>\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"nome\" name=\"nome\">\r\n    </div>\r\n    <div class=\"m-3\">\r\n      <label class=\"form-label\">Classificação Indicativa</label>\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"classif_ind\" name=\"classif_ind\">\r\n    </div>\r\n    <div class=\"m-3\">\r\n      <label class=\"form-label\">Ano de Lançamento</label>\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"ano_lanc\" name=\"ano_lanc\">\r\n    </div>\r\n    <div class=\"m-3\">\r\n        <label class=\"form-label\">Genero</label>\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"GeneroId\" name=\"GeneroId\">\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary m-3\" (click)=\"cadastrar()\">Salvar</button>\r\n  </form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}