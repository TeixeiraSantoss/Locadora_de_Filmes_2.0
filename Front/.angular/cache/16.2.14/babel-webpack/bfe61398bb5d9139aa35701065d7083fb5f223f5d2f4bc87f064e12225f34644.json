{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CadastrarUsuarioComponent {\n  constructor(client, router) {\n    this.client = client;\n    this.router = router;\n    //Atributos que vão ser carregados com dados pelo Front\n    this.nome = \"\";\n    this.idade = \"\";\n    this.ultimoId = 0;\n    this.usuarios = [];\n  }\n  ngOnInit() {\n    this.client.get(\"https://localhost:7187/api/usuario/listar\").subscribe({\n      next: usuarios => {\n        this.usuarios = usuarios;\n        if (usuarios.length > 0) {\n          const ultimoUsuario = usuarios[usuarios.length - 1];\n          if (ultimoUsuario.id !== undefined) {\n            this.ultimoId = ultimoUsuario.id += 1;\n            console.log(\"Ultimo id: \", this.ultimoId);\n          }\n        }\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  cadastrar() {\n    let novoUsuario = {\n      id: this.ultimoId,\n      nome: this.nome,\n      idade: Number.parseInt(this.idade)\n    };\n    this.client.post(\"https://localhost:7187/api/usuario/cadastrar\", novoUsuario).subscribe({\n      next: () => {\n        console.log(\"Usuario cadastrado com sucesso\");\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n    this.router.navigate(['/usuario/listar']);\n  }\n  static #_ = this.ɵfac = function CadastrarUsuarioComponent_Factory(t) {\n    return new (t || CadastrarUsuarioComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarUsuarioComponent,\n    selectors: [[\"app-cadastrar-usuario\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[1, \"m-3\"], [1, \"form-label\"], [\"type\", \"text\", \"name\", \"Nome\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"Idade\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"routerLink\", \"pages/usuario/listar\", 1, \"nav-link\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"m-3\", 3, \"click\"]],\n    template: function CadastrarUsuarioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarUsuarioComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.nome = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"label\", 1);\n        i0.ɵɵtext(6, \"Idade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarUsuarioComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.idade = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"a\", 4)(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CadastrarUsuarioComponent_Template_button_click_9_listener() {\n          return ctx.cadastrar();\n        });\n        i0.ɵɵtext(10, \"Salvar\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.nome);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.idade);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CadastrarUsuarioComponent","constructor","client","router","nome","idade","ultimoId","usuarios","ngOnInit","get","subscribe","next","length","ultimoUsuario","id","undefined","console","log","error","erro","cadastrar","novoUsuario","Number","parseInt","post","navigate","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","CadastrarUsuarioComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarUsuarioComponent_Template_input_ngModelChange_4_listener","$event","CadastrarUsuarioComponent_Template_input_ngModelChange_7_listener","CadastrarUsuarioComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Usuario\\cadastrar-usuario\\cadastrar-usuario.component.ts","D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Usuario\\cadastrar-usuario\\cadastrar-usuario.component.html"],"sourcesContent":["import { UsuarioModel } from 'src/app/models/usuario.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cadastrar-usuario',\n  templateUrl: './cadastrar-usuario.component.html',\n  styleUrls: ['./cadastrar-usuario.component.css']\n})\nexport class CadastrarUsuarioComponent {\n  constructor(private client: HttpClient,private router: Router\n  ){}\n\n  //Atributos que vão ser carregados com dados pelo Front\n  nome: string = \"\"\n  idade: string = \"\"\n  ultimoId: number = 0\n\n  usuarios: UsuarioModel[] = []\n\n  ngOnInit(): void\n  {\n    this.client.get<UsuarioModel[]>\n    (\"https://localhost:7187/api/usuario/listar\")\n    .subscribe\n    ({\n      next: (usuarios) =>\n        {\n          this.usuarios = usuarios\n          \n          if(usuarios.length > 0)\n            {\n              const ultimoUsuario: UsuarioModel = usuarios[usuarios.length - 1]\n  \n              if(ultimoUsuario.id !== undefined)\n                {\n                  this.ultimoId = (ultimoUsuario.id += 1)\n                  console.log(\"Ultimo id: \", this.ultimoId)\n                }\n            }\n        },\n      error: (erro) =>\n        {\n          console.log(erro)\n        }\n    })\n  }\n\n  cadastrar(): void\n  {\n    let novoUsuario: UsuarioModel = \n    {\n      id: this.ultimoId,\n      nome: this.nome,\n      idade: Number.parseInt(this.idade)\n    }\n\n    this.client.post<UsuarioModel>\n    (\"https://localhost:7187/api/usuario/cadastrar\", novoUsuario)\n    .subscribe\n    ({\n      next: () =>\n        {\n          console.log(\"Usuario cadastrado com sucesso\")\n        },\n      error: (erro) =>\n        {\n          console.log(erro)\n        }\n    })\n    this.router.navigate(['/usuario/listar']);\n  }\n}\n","<form>\n    <div class=\"m-3\">\n      <label class=\"form-label\">Nome</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"nome\" name=\"Nome\">\n      \n      <label class=\"form-label\">Idade</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"idade\" name=\"Idade\">\n    </div>\n    <a class=\"nav-link\" routerLink=\"pages/usuario/listar\">      \n      <button type=\"submit\" class=\"btn btn-primary m-3\" (click)=\"cadastrar()\">Salvar</button>\n    </a>\n  </form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}