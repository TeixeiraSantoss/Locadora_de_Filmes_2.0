{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.authservice = this.authService;\n    this.showNavbar = true;\n    this.title = 'Front';\n    this.isCollapsedNav = false;\n    this.isCollapsedFilm = true;\n    this.isCollapsedGen = true;\n    this.isCollapsedUser = true;\n  }\n  //Regra de negocio para definir quando a NavBar NÃO deve ser exibida\n  ngOnInit() {\n    this.router.events.subscribe(() => {\n      // Verifica se a rota atual é 'login' ou 'cadastrar'\n      // Caso seja a NavBar NÃO será exibida\n      const currentRoute = this.router.url;\n      this.showNavbar = !(currentRoute.includes('/pages/usuario/login') || currentRoute.includes('/pages/usuario/cadastrar'));\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","router","authService","authservice","showNavbar","title","isCollapsedNav","isCollapsedFilm","isCollapsedGen","isCollapsedUser","ngOnInit","events","subscribe","currentRoute","url","includes","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './services/auth.services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  authservice = this.authService;\n  showNavbar: boolean = true;\n  title = 'Front';\n  isCollapsedNav = false;\n  isCollapsedFilm = true;\n  isCollapsedGen = true;\n  isCollapsedUser = true;\n\n  //Regra de negocio para definir quando a NavBar NÃO deve ser exibida\n  ngOnInit(): void {\n    this.router.events.subscribe(() => {\n      // Verifica se a rota atual é 'login' ou 'cadastrar'\n      // Caso seja a NavBar NÃO será exibida\n      const currentRoute = this.router.url;\n      this.showNavbar = !(currentRoute.includes('/pages/usuario/login') || currentRoute.includes('/pages/usuario/cadastrar'));\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAEvBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAEvD,KAAAC,WAAW,GAAG,IAAI,CAACD,WAAW;IAC9B,KAAAE,UAAU,GAAY,IAAI;IAC1B,KAAAC,KAAK,GAAG,OAAO;IACf,KAAAC,cAAc,GAAG,KAAK;IACtB,KAAAC,eAAe,GAAG,IAAI;IACtB,KAAAC,cAAc,GAAG,IAAI;IACrB,KAAAC,eAAe,GAAG,IAAI;EARiD;EAUvE;EACAC,QAAQA,CAAA;IACN,IAAI,CAACT,MAAM,CAACU,MAAM,CAACC,SAAS,CAAC,MAAK;MAChC;MACA;MACA,MAAMC,YAAY,GAAG,IAAI,CAACZ,MAAM,CAACa,GAAG;MACpC,IAAI,CAACV,UAAU,GAAG,EAAES,YAAY,CAACE,QAAQ,CAAC,sBAAsB,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACzH,CAAC,CAAC;EACJ;CACD;AArBYhB,YAAY,GAAAiB,UAAA,EALxBlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWpB,YAAY,CAqBxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}