{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListarComponent = class ListarComponent {\n  //\"client\" vai permitir que eu acesse os metodos HTTP\n  constructor(client) {\n    this.client = client;\n    //Variaveis\n    //Lista de filmes vinda da API\n    this.filmes = [];\n    //Lista de filmes que vai ser manipulada para fazer a filtragem\n    this.filmesFiltrados = [];\n    //\n    //INICIO FILTRO\n    //Vai receber o termo de pesquisa\n    this._termoPesquisa = \"\";\n  }\n  //Getter para obter o \"_termoPesquisa\"\n  get termoPesquisa() {\n    return this._termoPesquisa;\n  }\n  //Setter para definir o \"_termoPesquisa\"\n  set termoPesquisa(value) {\n    this._termoPesquisa = value;\n    this.filmesFiltrados = this.termoPesquisa ? this.filtrarFilme(this.termoPesquisa) : this.filmes;\n  }\n  filtrarFilme(filtraPor) {\n    filtraPor = filtraPor.toLocaleLowerCase();\n    return this.filmes.filter(filme => filme.nome.toLocaleLowerCase().indexOf(filtraPor) !== -1);\n  }\n  ngOnInit() {\n    //Fazendo uma requisição para obter uma lista de \"FilmeModel\"\n    this.client.get(\"https://localhost:7187/api/filme/listar\")\n    //\"subscribe\" vai receber a resposta da requisição\n    .subscribe({\n      //Caso o retorno seja bem sucedido\n      next: filmes => {\n        this.filmes = filmes;\n        this.filmesFiltrados = filmes;\n        console.table(filmes);\n      },\n      //Caso o retorno seja um \"error\"\n      error: erro => {\n        console.log(erro);\n      }\n    });\n    //Requisição para obter uma lista de \"GeneroModel\"\n    // this.client.get<GeneroModel[]>\n    // (\"https://localhost:7187/api/genero/listar\")\n    // .subscribe\n    // ({\n    //   next:(generos) => {\n    //     this.generos = generos;\n    //   },\n    //   error: (erro) => {\n    //     console.log(erro);\n    //   }\n    // })\n  }\n\n  excluir(id) {\n    this.client.delete(`https://localhost:7187/api/filme/excluir/${id}`).subscribe({\n      next: () => {\n        this.filmes = this.filmes.filter(filme => filme.id !== id);\n        this.filmesFiltrados = this.filmesFiltrados.filter(filme => filme.id !== id);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n};\nListarComponent = __decorate([Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css']\n})], ListarComponent);","map":{"version":3,"names":["Component","ListarComponent","constructor","client","filmes","filmesFiltrados","_termoPesquisa","termoPesquisa","value","filtrarFilme","filtraPor","toLocaleLowerCase","filter","filme","nome","indexOf","ngOnInit","get","subscribe","next","console","table","error","erro","log","excluir","id","delete","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Filme\\listar\\listar.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FilmeModel } from 'src/app/models/filme.model';\nimport { GeneroModel } from 'src/app/models/genero.model';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css']\n})\nexport class ListarComponent {\n  //\"client\" vai permitir que eu acesse os metodos HTTP\n  constructor(private client: HttpClient) {}\n\n  //Variaveis\n\n  //Lista de filmes vinda da API\n  public filmes: FilmeModel[] = [];\n\n  //Lista de filmes que vai ser manipulada para fazer a filtragem\n  public filmesFiltrados: FilmeModel[] = [];\n\n  //\n  //INICIO FILTRO\n\n  //Vai receber o termo de pesquisa\n  private _termoPesquisa: string = \"\";\n\n  //Getter para obter o \"_termoPesquisa\"\n  public get termoPesquisa(): string{\n    return this._termoPesquisa;\n  }\n\n  //Setter para definir o \"_termoPesquisa\"\n  public set termoPesquisa(value: string){\n    this._termoPesquisa = value;\n\n    this.filmesFiltrados = this.termoPesquisa ? this.filtrarFilme(this.termoPesquisa) : this.filmes\n  \n  }\n\n  filtrarFilme(filtraPor: string): FilmeModel[]{\n    filtraPor = filtraPor.toLocaleLowerCase()\n\n    return this.filmes.filter(filme => filme.nome.toLocaleLowerCase().indexOf(filtraPor) !== -1);\n  }\n\n\n  ngOnInit(): void{\n\n    //Fazendo uma requisição para obter uma lista de \"FilmeModel\"\n    this.client.get<FilmeModel[]>\n    (\"https://localhost:7187/api/filme/listar\")\n    //\"subscribe\" vai receber a resposta da requisição\n    .subscribe({\n      //Caso o retorno seja bem sucedido\n      next: (filmes) => {\n        this.filmes = filmes;\n        this.filmesFiltrados = filmes;\n        console.table(filmes)\n      },\n      //Caso o retorno seja um \"error\"\n      error: (erro) =>{\n        console.log(erro);\n      }\n    })\n\n    //Requisição para obter uma lista de \"GeneroModel\"\n    // this.client.get<GeneroModel[]>\n    // (\"https://localhost:7187/api/genero/listar\")\n    // .subscribe\n    // ({\n    //   next:(generos) => {\n    //     this.generos = generos;\n    //   },\n    //   error: (erro) => {\n    //     console.log(erro);\n    //   }\n    // })\n\n  }\n\n  excluir(id: number): void\n  {\n    this.client.delete<FilmeModel[]>\n    (`https://localhost:7187/api/filme/excluir/${id}`)\n    .subscribe\n    ({\n      next: () => {\n        this.filmes = this.filmes.filter(filme => filme.id !== id)\n        this.filmesFiltrados = this.filmesFiltrados.filter(filme => filme.id !== id)\n      },\n      error: (erro) => {\n        console.log(erro)\n      }\n    })\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAC1B;EACAC,YAAoBC,MAAkB;IAAlB,KAAAA,MAAM,GAANA,MAAM;IAE1B;IAEA;IACO,KAAAC,MAAM,GAAiB,EAAE;IAEhC;IACO,KAAAC,eAAe,GAAiB,EAAE;IAEzC;IACA;IAEA;IACQ,KAAAC,cAAc,GAAW,EAAE;EAdM;EAgBzC;EACA,IAAWC,aAAaA,CAAA;IACtB,OAAO,IAAI,CAACD,cAAc;EAC5B;EAEA;EACA,IAAWC,aAAaA,CAACC,KAAa;IACpC,IAAI,CAACF,cAAc,GAAGE,KAAK;IAE3B,IAAI,CAACH,eAAe,GAAG,IAAI,CAACE,aAAa,GAAG,IAAI,CAACE,YAAY,CAAC,IAAI,CAACF,aAAa,CAAC,GAAG,IAAI,CAACH,MAAM;EAEjG;EAEAK,YAAYA,CAACC,SAAiB;IAC5BA,SAAS,GAAGA,SAAS,CAACC,iBAAiB,EAAE;IAEzC,OAAO,IAAI,CAACP,MAAM,CAACQ,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACH,iBAAiB,EAAE,CAACI,OAAO,CAACL,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EAC9F;EAGAM,QAAQA,CAAA;IAEN;IACA,IAAI,CAACb,MAAM,CAACc,GAAG,CACd,yCAAyC;IAC1C;IAAA,CACCC,SAAS,CAAC;MACT;MACAC,IAAI,EAAGf,MAAM,IAAI;QACf,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACC,eAAe,GAAGD,MAAM;QAC7BgB,OAAO,CAACC,KAAK,CAACjB,MAAM,CAAC;MACvB,CAAC;MACD;MACAkB,KAAK,EAAGC,IAAI,IAAI;QACdH,OAAO,CAACI,GAAG,CAACD,IAAI,CAAC;MACnB;KACD,CAAC;IAEF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEF;;EAEAE,OAAOA,CAACC,EAAU;IAEhB,IAAI,CAACvB,MAAM,CAACwB,MAAM,CACjB,4CAA4CD,EAAE,EAAE,CAAC,CACjDR,SAAS,CACT;MACCC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACf,MAAM,GAAG,IAAI,CAACA,MAAM,CAACQ,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACa,EAAE,KAAKA,EAAE,CAAC;QAC1D,IAAI,CAACrB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACO,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACa,EAAE,KAAKA,EAAE,CAAC;MAC9E,CAAC;MACDJ,KAAK,EAAGC,IAAI,IAAI;QACdH,OAAO,CAACI,GAAG,CAACD,IAAI,CAAC;MACnB;KACD,CAAC;EACJ;CACD;AAvFYtB,eAAe,GAAA2B,UAAA,EAL3B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW9B,eAAe,CAuF3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}