{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginUsuarioComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.mensagemErro, \" \");\n  }\n}\nexport class LoginUsuarioComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.senha = \"\";\n    this.email = \"\";\n    //Messagem de erro caso o login seja malsucedido\n    this.mensagemErro = null;\n  }\n  login() {\n    const loginData = {\n      email: this.email,\n      senha: this.senha\n    };\n    this.http.post('https://localhost:7187/api/usuario/login', loginData).subscribe({\n      next: () => {\n        console.log(\"Login realizado com sucesso\");\n        this.router.navigate([\"pages/filme/listar\"]);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      // Simulação de chamada ao serviço de autenticação\n      this.handleLoginFailure('Email ou senha inválidos');\n    }\n  }\n  handleLoginFailure(message) {\n    this.mensagemErro = message;\n    // O alerta desaparecerá após 3 segundos devido à animação CSS\n  }\n  static #_ = this.ɵfac = function LoginUsuarioComponent_Factory(t) {\n    return new (t || LoginUsuarioComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginUsuarioComponent,\n    selectors: [[\"app-login-usuario\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"m-3\"], [1, \"form-label\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"name\", \"Email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"autocomplete\", \"off\", \"name\", \"Senha\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"m-3\", 3, \"click\"], [\"type\", \"submit\", \"routerLink\", \"/pages/usuario/cadastrar\", 1, \"btn\", \"btn-link\", \"m-3\"], [\"class\", \"alert\", 4, \"ngIf\"], [1, \"alert\"]],\n    template: function LoginUsuarioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginUsuarioComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginUsuarioComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginUsuarioComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.senha = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginUsuarioComponent_Template_button_click_9_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(10, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 7);\n        i0.ɵɵtext(12, \"Cadastrar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, LoginUsuarioComponent_div_13_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.senha);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.mensagemErro);\n      }\n    },\n    dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","mensagemErro","LoginUsuarioComponent","constructor","http","router","senha","email","login","loginData","post","subscribe","next","console","log","navigate","error","erro","onSubmit","form","valid","handleLoginFailure","message","_","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","LoginUsuarioComponent_Template","rf","ctx","ɵɵlistener","LoginUsuarioComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r2","_r0","ɵɵreference","ɵɵresetView","LoginUsuarioComponent_Template_input_ngModelChange_5_listener","$event","LoginUsuarioComponent_Template_input_ngModelChange_8_listener","LoginUsuarioComponent_Template_button_click_9_listener","ɵɵtemplate","LoginUsuarioComponent_div_13_Template","ɵɵproperty"],"sources":["D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Usuario\\login-usuario\\login-usuario.component.ts","D:\\ESTUDO\\Locadora(Filmes)\\Front\\src\\app\\pages\\Usuario\\login-usuario\\login-usuario.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsuarioModel } from 'src/app/models/usuario.model';\n\n@Component({\n  selector: 'app-login-usuario',\n  templateUrl: './login-usuario.component.html',\n  styleUrls: ['./login-usuario.component.css']\n})\nexport class LoginUsuarioComponent {\n  constructor(private http: HttpClient, private router: Router) {}\n\n  senha: string = \"\"\n  email: string = \"\"\n\n  login(): void\n  {\n    const loginData = {\n      email: this.email,\n      senha: this.senha\n    };\n\n    this.http.post<UsuarioModel>\n    ('https://localhost:7187/api/usuario/login', loginData)\n    .subscribe\n    ({\n      next: () =>\n        {\n          console.log(\"Login realizado com sucesso\")\n          this.router.navigate([\"pages/filme/listar\"])\n        },\n        error: (erro) =>\n        {\n          console.log(erro)\n        }\n    })\n  }\n\n  //Messagem de erro caso o login seja malsucedido\n  mensagemErro: string | null = null;\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      // Simulação de chamada ao serviço de autenticação\n      this.handleLoginFailure('Email ou senha inválidos');\n    }\n  }\n\n  handleLoginFailure(message: string) {\n    this.mensagemErro = message;\n    // O alerta desaparecerá após 3 segundos devido à animação CSS\n  }\n}\n","<form (ngSubmit)=\"onSubmit(loginForm)\" #loginForm=\"ngForm\">\n    <div class=\"m-3\">\n      <label class=\"form-label\">Email</label>\n      <input type=\"text\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"email\" name=\"Email\">\n      \n      <label class=\"form-label\">Senha</label>\n      <input type=\"password\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"senha\" name=\"Senha\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary m-3\" (click)=\"login()\">Login</button>\n    <button type=\"submit\" class=\"btn btn-link m-3\" routerLink=\"/pages/usuario/cadastrar\">Cadastrar</button>\n    <!-- Alerta de erro -->\n    <div class=\"alert\" *ngIf=\"mensagemErro\">\n      {{ mensagemErro }}\n    </div>\n</form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}